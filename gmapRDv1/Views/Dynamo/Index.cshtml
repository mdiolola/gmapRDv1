@model gmapRDv1.Models.Dynamo


@{
    ViewData["Title"] = "Index";
}
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAT8DIEC_kxOQbKy5hhFKdydtcuSkxCWIs&callback=initMap"></script>
<script type="text/javascript">
    function initMap()
    {
        var markers = [{ 'title': 'MAYNARD CABILING', 'lat': '14.286132', 'lng': '121.073721', 'description': 'testing' }]; 
        var mapOptions =
            {
                center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
                zoom: 15,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };

        var map = new google.maps.Map(document.getElementById("map"), mapOptions);

        for (i = 0; i < markers.length; i++)
        {
            var data = markers[i];
            var myLatlng = new google.maps.LatLng(data.lat, data.lng);
            var marker = new google.maps.Marker(
                {
                    position: myLatlng,
                    map: map,
                    title: data.title,
                    draggable: true
                });
            setMarker(marker, data);
        }
    }

    function getAddress()
    {
        var markers = [{'title': 'MAYNARD CABILING','lat': '14.286132' , 'lng': '121.073721', 'description': 'testing'}]; 
        var data = markers[0];
        var zipcode = document.getElementById('gzipcode').value;
        var geocoder = new google.maps.Geocoder();

        geocoder.geocode({ 'address': zipcode },
            function (results, status) {
                if (status === google.maps.GeocoderStatus.OK) {
                    var mapOptions =
                        {
                            center: new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng()),
                            zoom: 15,
                            mapTypeId: google.maps.MapTypeId.ROADMAP
                        };

                    var map = new google.maps.Map(document.getElementById("map"), mapOptions);

                    var marker = new google.maps.Marker(
                        {
                            map: map,
                            position: results[0].geometry.location,
                            draggable: true,
                            title: data.title
                        });

                    document.getElementById('current').innerHTML = '<p>Marker dropped: Current Lat: ' + results[0].geometry.location.lat() + ' Current Lng: ' + results[0].geometry.location.lng(); + '</p>';
                   document.getElementById('Glat').value = results[0].geometry.location.lat();
                   document.getElementById('Glng').value = results[0].geometry.location.lng();
                    data.description = zipcode;
                    setMarker(marker, data);
                }
                else {
                    document.getElementById('current').innerHTML = '<p>' + status + '</p>';
                }
            });
    }

    function setMarker(marker, data) {
        var infoWindow = new google.maps.InfoWindow();
        google.maps.event.addListener(marker, "click", function (e) {
            infoWindow.setContent(data.description);
            infoWindow.open(map, marker);
        });
    }
</script>

<h2>Index</h2>

<form asp-action="Index">
    <div class="form-horizontal">
        <h4>Dynamo</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Zipcode" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Zipcode" class="form-control" id="gzipcode"/>
                <span asp-validation-for="Zipcode" class="text-danger"></span>
            </div>
        </div>
        <div class="form-group">
            <label asp-for="distance" class="col-md-2 control-label"></label>
            <div class="col-md-10">
          @Html.DropDownList("distance", ((List<string>)ViewBag.distance).Select(m => new SelectListItem { Text = m, Value = m }), new { @class="form-control" })
                <span asp-validation-for="distance" class="text-danger"></span>
            </div>
        </div>
        @Html.HiddenFor(model => model.lat, new { @class = "form-control", id = "Glat" })
        @Html.HiddenFor(model => model.lng, new { @class = "form-control", id = "Glng" })
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="get Address Lat/Lon" onclick="getAddress()" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
        <div class="form-group">
            <div id="map" style="width: 600px; height: 350px"></div>
            <div id="current"></div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


